image: Visual Studio 2019

environment:
  # mysql CLI reads the default password from this variable if you don't use the --password swtich
  MYSQL_PWD:
    secure: H8uzUOmYDz7QbfG9kv6XnA==

# prevent MSBuild from running
build: off

# https://www.appveyor.com/docs/services-databases/#mysql
services:
  - mysql

clone_script:
  - cmd: |
      git clone -q --recursive --branch=%APPVEYOR_REPO_BRANCH% https://github.com/%APPVEYOR_REPO_NAME%.git %APPVEYOR_BUILD_FOLDER%
      git checkout -qf %APPVEYOR_REPO_COMMIT%

install:
  - cmd: |
      nuget install redis-64 -Version 3.0.503 -OutputDirectory "Vendor"
      .\Vendor\redis-64.3.0.503\tools\redis-server.exe --service-install
      .\Vendor\redis-64.3.0.503\tools\redis-server.exe --service-start

before_test:
  - ps: |    
      @{Server=@{Host="127.0.0.1:1986";SessionTimeoutInMinutes=10;AllowedOrigins=@("http://127.0.0.1:8080")};ConnectionString="Server=127.0.0.1;Port=3306;Database=myapp_test;UId=root;PWd=${$env:MYSQL_PWD}";Redis=@{Host="127.0.0.1";Port=6379}} | convertto-json | set-content -path ".\SRC\TestsBase\config.test.json"
  - cmd: |
      "C:\Program Files\MySQL\MySQL Server 5.7\bin\mysql" -e "create database myapp_test;" --user=root

test_script:
  - ps: .\test.ps1

after_test:
  - ps: |
      $client=new-object System.Net.WebClient
      get-childItem -path ([System.IO.Path]::Combine("Artifacts", "*.xml")) | foreach {
        Write-Host "Uploading test result: $($_.Name)"
        $client.UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($Env:APPVEYOR_JOB_ID)", $_.ToString())
      }